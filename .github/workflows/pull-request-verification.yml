name: "Pull Request Verification"
on:
  pull_request:
    paths-ignore: [ '*.md' ]
    branches:
      - main
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
      with:
        node-version: 20
        cache: 'npm'
    - run: |
        npm install
        npm run all

  test-inline:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: ./
      id: filter
      with:
        filters: |
          error:
            - not_existing_path/**/*
          any:
            - "**/*"
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1
    - name: changes-test
      if: contains(fromJSON(steps.filter.outputs.changes), 'error') || !contains(fromJSON(steps.filter.outputs.changes), 'any')
      run: exit 1

  test-external:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: ./
      id: filter
      with:
        filters: '.github/filters.yml'
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1

  test-without-token:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: ./
      id: filter
      with:
        token: ''
        filters: '.github/filters.yml'
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1

  test-wd-without-token:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        path: somewhere
    - uses: ./somewhere
      id: filter
      with:
        token: ''
        working-directory: somewhere
        filters: '.github/filters.yml'
    - name: filter-test
      if: steps.filter.outputs.any != 'true' || steps.filter.outputs.error == 'true'
      run: exit 1

  test-local-changes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - run: echo "NEW FILE" > local
    - run: git add local
    - uses: ./
      id: filter
      with:
        base: HEAD
        filters: |
          local:
            - local
    - name: filter-test
      if: steps.filter.outputs.local != 'true'
      run: exit 1
    - name: count-test
      if: steps.filter.outputs.local_count != 1
      run: exit 1

  test-change-type:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: configure GIT user
      run: git config user.email "john@nowhere.local" && git config user.name "John Doe"
    - name: modify working tree
      run: touch add.txt && rm README.md && echo "TEST" > LICENSE
    - name: commit changes
      run: git add -A && git commit -a -m 'testing this action'
    - uses: ./
      id: filter
      with:
        token: ''
        list-files: shell
        filters: |
          added:
            - added: "add.txt"
          deleted:
            - deleted: "README.md"
          modified:
            - modified: "LICENSE"
          any:
            - added|deleted|modified: "*"
    - name: Print 'added_files'
      run: echo ${{steps.filter.outputs.added_files}}
    - name: Print 'modified_files'
      run: echo ${{steps.filter.outputs.modified_files}}
    - name: Print 'deleted_files'
      run: echo ${{steps.filter.outputs.deleted_files}}
    - name: filter-test
      if: |
        steps.filter.outputs.added != 'true'
        || steps.filter.outputs.deleted != 'true'
        || steps.filter.outputs.modified != 'true'
        || steps.filter.outputs.any != 'true'
        || steps.filter.outputs.added_files != 'add.txt'
        || steps.filter.outputs.modified_files != 'LICENSE'
        || steps.filter.outputs.deleted_files != 'README.md'
      run: exit 1

  test-json-output:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Create test files
      run: |
        mkdir -p frontend/src backend/src
        touch frontend/src/app.ts frontend/src/index.ts
        touch backend/src/main.ts
    - name: Add files
      run: git add .
    - uses: ./
      id: filter
      with:
        base: HEAD
        filters: |
          frontend:
            - 'frontend/**'
          backend:
            - 'backend/**'
        json-output: true
    - name: Verify JSON output
      run: |
        # Verify frontend JSON
        FRONTEND_FILES=$(cat /tmp/paths-filter/frontend.json)
        EXPECTED_FRONTEND='[
          "frontend/src/app.ts",
          "frontend/src/index.ts"
        ]'
        if [ "$(echo $FRONTEND_FILES | jq -c 'sort')" != "$(echo $EXPECTED_FRONTEND | jq -c 'sort')" ]; then
          echo "Frontend files do not match expected output"
          echo "Got: $FRONTEND_FILES"
          echo "Expected: $EXPECTED_FRONTEND"
          exit 1
        fi

        # Verify backend JSON
        BACKEND_FILES=$(cat /tmp/paths-filter/backend.json)
        EXPECTED_BACKEND='[
          "backend/src/main.ts"
        ]'
        if [ "$(echo $BACKEND_FILES | jq -c 'sort')" != "$(echo $EXPECTED_BACKEND | jq -c 'sort')" ]; then
          echo "Backend files do not match expected output"
          echo "Got: $BACKEND_FILES"
          echo "Expected: $EXPECTED_BACKEND"
          exit 1
        fi
